let Event;_562‍.x([["readEventById",()=>readEventById],["readEventByIdAPI",()=>readEventByIdAPI],["readAllEvents",()=>readAllEvents],["readAllEventsAPI",()=>readAllEventsAPI]]);_562‍.w("../../class/event",[["Event",["Event"],function(v){Event=v}]]);

       const readEventById = async (id) => {
	try {
		const event = await Event.findById(id);
		if (event) {
			return event;
		} else {
			throw new Error('Evento não encontrado');
		}
	} catch (e) {
		throw new Error('Não foi possível buscar por esse evento');
	}
};

       const readEventByIdAPI = async (req, res) => {
	const event = await readEventById(req.params.id);
	res.status(200).json(event);
};

       const readAllEvents = async () => {
	try {
		const allEvents = await Event.find();
		return allEvents;
	} catch (e) {
		throw new Error('Não foi possível buscar eventos');
	}
};

       const readAllEventsAPI = async (req, res) => {
	const allEvents = await readAllEvents();
	res.status(200).json(allEvents);
};
