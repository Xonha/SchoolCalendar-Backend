let Mark;_f67‍.x([["readById",()=>readById],["readByIdAPI",()=>readByIdAPI],["readAll",()=>readAll],["readAllAPI",()=>readAllAPI]]);_f67‍.w("../../class/mark",[["Mark",["Mark"],function(v){Mark=v}]]);

       const readById = async (id) => {
	try {
		const mark = await Mark.findById(id);
		if (mark) {
			return mark;
		} else {
			throw new Error('Matéria não econtrada');
		}
	} catch (e) {
		throw new Error('Não foi possível buscar por essa matéria');
	}
};

       const readByIdAPI = async (req, res) => {
	const mark = await readById(req.params.id);
	res.status(200).json(mark);
};

       const readAll = async () => {
	try {
		const allMarks = await Mark.find();
		return allMarks;
	} catch (e) {
		throw new Error('Não foi possível buscar por essa matéria');
	}
};

       const readAllAPI = async (req, res) => {
	const allMarks = await readAll();
	res.status(200).json(allMarks);
};
