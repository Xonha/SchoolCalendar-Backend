let Mark;_184‍.x([["readMarkById",()=>readMarkById],["readMarkByIdAPI",()=>readMarkByIdAPI],["readAllMarks",()=>readAllMarks],["readAllMarksAPI",()=>readAllMarksAPI]]);_184‍.w("../../class/mark",[["Mark",["Mark"],function(v){Mark=v}]]);

       const readMarkById = async (id) => {
	try {
		const mark = await Mark.findById(id);
		if (mark) {
			return mark;
		} else {
			throw new Error('Matéria não econtrada');
		}
	} catch (e) {
		throw new Error('Não foi possível buscar por essa matéria');
	}
};

       const readMarkByIdAPI = async (req, res) => {
	const mark = await readMarkById(req.params.id);
	res.status(200).json(mark);
};

       const readAllMarks = async () => {
	try {
		const allMarks = await Mark.find();
		return allMarks;
	} catch (e) {
		throw new Error('Não foi possível buscar por essa matéria');
	}
};

       const readAllMarksAPI = async (req, res) => {
	const allMarks = await readAllMarks();
	res.status(200).json(allMarks);
};
